- hosts: localhost
  vars:
    no_proxy: "{{ proxy_env['no_proxy'] }}"
  tasks:
    - name: compute no_proxy
      block:
      - set_fact:
          no_proxy: "{{ no_proxy }},{{ hostvars[item]['nodepool']['interface_ip'] }}"
        when: hostvars[item]['nodepool']['interface_ip'] is defined
        with_items: "{{ query('inventory_hostnames', 'all,!localhost') }}"
    - name: register no_proxy
      command: /bin/echo "{{ no_proxy }}"
      register: no_proxy_var

- hosts: controller
  tasks:
    - name: fetch vsp_info
      slurp:
        src: /etc/ci/vsp_info.yaml
      register: vsp_info

# Changes that run through devstack-tempest are likely to have an impact on
# the devstack part of the job, so we keep devstack in the main play to
# avoid zuul retrying on legitimate failures.
- hosts: all
  vars:
    vsp: "{{ hostvars['controller']['vsp_info']['content'] | b64decode | from_yaml}}"
    env:
      no_proxy: "{{ hostvars['localhost']['no_proxy_var'].stdout }},{{ vsp['vsd_server'].split(':')[0]}}"
      NUAGE_VSD_SERVERS: "{{ vsp['vsd_server'] }}"
      NUAGE_VSC_SERVER: "{{ vsp['vsc_controller'] }}"
      NUAGE_VSP_RELEASE: "{{ vsp['nuage_vsp_release'] }}"
  roles:
    - setup-nuage-source-dirs
    - orchestrate-devstack
  environment: '{{ proxy_env|combine(env) }}'

# We run tests only on one node, regardless how many nodes are in the system
- hosts: tempest
  vars:
    vsp: "{{ hostvars['controller']['vsp_info']['content'] | b64decode | from_yaml}}"
    env:
      no_proxy: "{{ hostvars['localhost']['no_proxy_var'].stdout }},{{ vsp['vsd_server'].split(':')[0]}}"
  roles:
    - setup-tempest-run-dir
    - setup-tempest-data-dir
    - acl-devstack-files
  environment: '{{ proxy_env|combine(env) }}'

- hosts: tempest
  roles:
    - run-tempest

