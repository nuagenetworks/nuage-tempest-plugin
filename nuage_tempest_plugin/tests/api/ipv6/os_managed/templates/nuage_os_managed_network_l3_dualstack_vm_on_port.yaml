heat_template_version: 2016-04-08
description: Template to create network from VSD managed network
parameters:
  net_name:
    type: string
    description: Name of private network to be created
  cidr4:
    type: string
    description: IPv4 network address (CIDR notation)
  dhcp_managed:
    type: boolean
    default: True
    description: Private network DHCP option
  gateway4:
    type: string
    default: None
    description: IPv4 network gateway address
  maskbits4:
    type: string
    description: IPv4 net mask bits

  cidr6:
    type: string
    description: IPv6 network address (CIDR notation)
  gateway6:
    type: string
    default: None
    description: IPv6 network gateway address
  maskbits6:
    type: string
    description: IPv6 net mask bits
  pool_start6:
    type: string
    description: Start of private network IP address allocation pool
  pool_end6:
    type: string
    description: End of private network IP address allocation pool

  flavor:
    type: string
    description: Flavor to use for servers
  image:
    type: string
    default: cirros


resources:
  dualstack_net:
    type: OS::Neutron::Net
    properties:
      name: { get_param: net_name }

  subnet4:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: dualstack_net }
      cidr: { get_param: cidr4 }
      enable_dhcp: { get_param: dhcp_managed }

  subnet6:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: dualstack_net }
      cidr: { get_param: cidr6 }
      #    gateway_ip: {description: 'The gateway IP address. Set to any of [ null | ~ | "" ]
      #    to create/update a subnet without a gateway. If omitted when creation, neutron
      #    will assign the first free IP address within the subnet to the gateway automatically.
      #    If remove this from template when update, the old gateway IP address will be detached.',
      ##    gateway_ip: null
      enable_dhcp: false
      ip_version: 6
      allocation_pools:
        - start: { get_param: pool_start6 }
          end: { get_param: pool_end6 }

  router:
    type: OS::Neutron::Router
    properties:
        name: router

  router_interface4:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: subnet4 }

  router_interface6:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: subnet6 }

  port1:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: dualstack_net }
      name: 'dualstack-port'
      fixed_ips: [ { subnet: { get_resource: subnet4 } }, { subnet: { get_resource: subnet6 } }  ]
      security_groups: [{ get_resource: vm_security_group }]

  vm1:
    type: OS::Nova::Server
    properties:
      flavor: { get_param: flavor }
      image: { get_param: image }
      networks:
        - port: { get_resource: port1 }

  port2:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: dualstack_net }
      name: 'dualstack-port'
      fixed_ips: [ { subnet: { get_resource: subnet4 } }, { subnet: { get_resource: subnet6 } }  ]
      security_groups: [{ get_resource: vm_security_group }]

  vm2:
    type: OS::Nova::Server
    properties:
      flavor: { get_param: flavor }
      image: { get_param: image }
      networks:
        - port: { get_resource: port2 }

  vm_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Add security group rules for server
      name: security-group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - remote_ip_prefix: 0:0::0/0
          protocol: icmp
          ethertype: 'IPv6'

